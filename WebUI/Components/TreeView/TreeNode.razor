@using VideoVault.WebApi
@using Microsoft.Extensions.Localization
@using VideoVault.WebUI.Components.TreeView
@using VideoVault.WebUI.Components.MappingModal

@inject IStringLocalizer<App> L

<li class="node">
    <span class="node-label" @onclick="@(SpanToggle)">
        <span class="fa @IconClass" ></span>
        <span>@L[Node.FriendlyName]</span>
    </span>                        
    <span class="node-label l-3 fa fa-plus-square-o" @onclick="@(OnShowNewNodeModal)"></span>

    <ul hidden="@HideChildren">
        @if (HasChildren) 
        {
            foreach (var node in Node.Children)
            {
                <TreeNode Node="node"></TreeNode>
            }
        }
    </ul>
</Li>

<MappingModal Node="Node" @bind-IsVisible="ShowNewNodeModal" @bind-IsVisible:event="IsVisibleChanged"></MappingModal>

@code {
    [Parameter]
    public MappingNodeDto Node { get; set; }
    
    private string IconClass => HasChildren ? (HideChildren ? "fa-folder-o" : "fa-folder-open-o") : "fa-file-code-o";
    private bool HideChildren { get; set; }
    private bool HasChildren => Node.Children != null;
    private bool ShowNewNodeModal { get; set; }

    // Add the column to the parent Grid component.
    // OnInitialized is called only once in the component lifecycle
    protected override void OnInitialized()
    {
    }

    protected override void OnParametersSet()
    {
    }

    private void SpanToggle()
    {
        HideChildren = !HideChildren;
    }
    
    private void OnShowNewNodeModal()
    {        
        ShowNewNodeModal = true;
    }
}