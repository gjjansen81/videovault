@page "/Customers/Edit/{Id:int}"
@page "/Customers/Edit/"
@using VideoVault.WebApi
@using System.Net
@using Microsoft.AspNetCore.WebUtilities
@using Microsoft.AspNetCore.Components.Forms
@using Microsoft.Extensions.Localization
@using VideoVault.WebUI.Components.Tab
@using VideoVault.WebUI.Services
@using VideoVault.WebUI.Components.Grid

@inject ICustomerClient CustomerService
@inject IUserClient UserService
@inject IStringLocalizer<App> L
@inject NavigationManager NavigationManager

<AuthorizeView roles="superuser">
    <Authorized Context="Auth">

        <TabControl>
            <TabPage Text=@L["CUSTOMERS_EDIT_TAB_GENERAL"]>

                <h1>@L["CUSTOMERS_EDIT_TAB_GENERAL_TITLE"]</h1>

                <EditForm Model="@Customer" OnValidSubmit="@HandleValidSubmit">
                    <DataAnnotationsValidator />
                    <ValidationSummary />
                    <div class="form-group d-none">
                        <label>@L["CUSTOMERS_EDIT_TAB_GENERAL_ID"]</label>
                        <InputNumber @bind-Value="Customer.Id" TValue="int" class="form-control" />
                    </div>
                    <div class="form-group">
                        <label>@L["CUSTOMERS_EDIT_TAB_GENERAL_NAME"]</label>
                        <InputText @bind-Value="Customer.Name" class="form-control" />
                    </div>
                    <div class="form-group">
                        <label>@L["CUSTOMERS_EDIT_TAB_GENERAL_STREET"]</label>
                        <InputText @bind-Value="Customer.Address.Street" class="form-control" />
                    </div>
                    <div class="form-group">
                        <label>@L["CUSTOMERS_EDIT_TAB_GENERAL_HOUSENUMBER"]</label>
                        <InputNumber @bind-Value="Customer.Address.HouseNumber" TValue="int" class="form-control" />
                    </div>
                    <div class="form-group">
                        <label>@L["CUSTOMERS_EDIT_TAB_GENERAL_HOUSENUMBEREXTENSION"]</label>
                        <InputText @bind-Value="Customer.Address.HouseNumberExtension" class="form-control" />
                    </div>
                    <div class="form-group">
                        <label>@L["CUSTOMERS_EDIT_TAB_GENERAL_ZIPCODE"]</label>
                        <InputText @bind-Value="Customer.Address.ZipCode" class="form-control" />
                    </div>
                    <div class="form-group">
                        <label>@L["CUSTOMERS_EDIT_TAB_GENERAL_CITY"]</label>
                        <InputText @bind-Value="Customer.Address.City" class="form-control" />
                    </div>
                    <div class="form-group">
                        <label>@L["CUSTOMERS_EDIT_TAB_GENERAL_COUNTRY"]</label>
                        <InputText @bind-Value="Customer.Address.Country" class="form-control" />
                    </div>
                    <div class="form-group">
                        <label>@L["CUSTOMERS_EDIT_TAB_GENERAL_CREATEDON"]</label>
                        <InputDate @bind-Value="Customer.CreatedOn" TValue="DateTimeOffset?" class="form-control" />
                    </div>

                    <button type="submit" class="btn btn-primary">@L["BUTTON_SUBMIT"]</button>
                </EditForm>
            </TabPage>
            <TabPage Text=@L["CUSTOMERS_EDIT_TAB_USERS"]>
                <div>
                    <h1 class="d-inline">@L["CUSTOMERS_EDIT_TAB_USERS_TITLE"]</h1>
                    <a href="/Customers/Users/edit" class="btn btn-primary ml-1 align-content-center">@L["BUTTON_ADD"]</a>
                </div>
            </TabPage>
            <TabPage Text="Tab 3">
                <h1>The third tab</h1>
            </TabPage>
        </TabControl>
    </Authorized>
</AuthorizeView>

@code {
    [Parameter]
    public int Id { get; set; }

    [Parameter]
    public CustomerDto Customer { get; set; }
 
    [Parameter]
    public List<UserDto> Users { get; set; }

    protected override async Task OnInitializedAsync()
    {
        Customer = new CustomerDto()
        {
            Address = new AddressDto()
        };
        Users = new List<UserDto>();

        try {
            if (Id > 0)
            {
                Customer = await CustomerService.GetByIdAsync(Id);
                Users = (await UserService.GetUsersOfCustomerAsync(Id)).ToList();
            }
        }
        catch (ApiException)
        {
            NavigationManager.NavigateTo($"Identity/Account/Login?redirect={NavigationManager.ToBaseRelativePath(NavigationManager.Uri)}");
        }
    }

    private async Task HandleValidSubmit()
    {
        Customer = await CustomerService.CreateAsync(new UpsertCustomerCommand() { Customer = Customer });
    }
}