@page "/DataSources/Edit/{Guid:guid}"
@page "/DataSources/Edit/"
@using VideoVault.WebApi
@using System.Net
@using Microsoft.AspNetCore.WebUtilities
@using Microsoft.AspNetCore.Components.Forms
@using Microsoft.Extensions.Localization
@using VideoVault.WebUI.Components.Tab
@using VideoVault.WebUI.Services
@using VideoVault.WebUI.Components.Grid

@inject IDataSourceClient DataSourceService
@inject IStringLocalizer<App> L
@inject NavigationManager NavigationManager

<AuthorizeView roles="superuser">
    <Authorized Context="Auth">

        <TabControl>
            <TabPage Text=@L["DATASOURCES_EDIT_TAB_GENERAL"]>

                <h1>@L["DATASOURCES_EDIT_TAB_GENERAL_TITLE"]</h1>

                <EditForm Model="@DataSource" OnValidSubmit="@HandleValidSubmit">
                    <DataAnnotationsValidator />
                    <ValidationSummary />
                    <div class="form-group">
                        <label>@L["DATASOURCES_EDIT_TAB_GENERAL_NAME"]</label>
                        <InputText @bind-Value="DataSource.Name" class="form-control" />
                    </div>
                    
                    <button type="submit" class="btn btn-primary">@L["BUTTON_SUBMIT"]</button>
                </EditForm>
            </TabPage>
        </TabControl>
    </Authorized>
</AuthorizeView>

@code {
    [Parameter]
    public Guid Guid { get; set; }

    [Parameter]
    public DataSourceDto DataSource { get; set; }
 
    protected override async Task OnInitializedAsync()
    {
        DataSource = new DataSourceDto()
        {
        };
        
        try {
            if (Guid != Guid.Empty)
            {
                DataSource = await DataSourceService.GetByIdAsync(Guid);
            }
        }
        catch (ApiException)
        {
            NavigationManager.NavigateTo($"Identity/Account/Login?redirect={NavigationManager.ToBaseRelativePath(NavigationManager.Uri)}");
        }
    }

    private async Task HandleValidSubmit()
    {
        DataSource = await DataSourceService.CreateAsync(new UpsertDataSourceCommand() { DataSource = DataSource });
        if (DataSource.Guid != Guid.Empty)
        {
            NavigationManager.NavigateTo($"DataSources/List/");
        }
    }
}