
<AuthorizeView>
    @page "/fetchdata"
    @using VideoVault.WebApi

    @inject IWeatherForecastClient ForecastService
    @inject NavigationManager NavigationManager 

    <h1>Weather forecast</h1>

    <p>This component demonstrates fetching data from a service.</p>

    @if (_forecasts == null)
    {
        <p><em>Loading...</em></p>
    }
    else
    {
        <table class="table">
            <thead>
                <tr>
                    <th>Date</th>
                    <th>Temp. (C)</th>
                    <th>Temp. (F)</th>
                    <th>Summary</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var forecast in _forecasts)
                {
                    <tr>
                        <td>@forecast.Date.ToString()</td>
                        <td>@forecast.TemperatureC</td>
                        <td>@forecast.TemperatureF</td>
                        <td>@forecast.Summary</td>
                    </tr>
                }
            </tbody>
        </table>
    }

    @code {
        private List<WeatherForecast> _forecasts;

        protected override async Task OnInitializedAsync()
        {
            try
            {
                _forecasts = (await ForecastService.GetAsync()).ToList();
            }
            catch (ApiException e)
            {
                NavigationManager.NavigateTo($"Identity/Account/Login?redirect={NavigationManager.ToBaseRelativePath(NavigationManager.Uri)}");
            }
        }
    }
</AuthorizeView>
